//
// File generated by /home1/midptf/packages/root/bin/rootcint at Tue Sep 22 14:13:38 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME PTFDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PTFDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace PTF {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void PTF_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("PTF", 0 /*version*/, "./ptfEvent.hh", 9,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &PTF_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void PTF_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void PTFcLcLPulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PTFcLcLPulse(void *p = 0);
   static void *newArray_PTFcLcLPulse(Long_t size, void *p);
   static void delete_PTFcLcLPulse(void *p);
   static void deleteArray_PTFcLcLPulse(void *p);
   static void destruct_PTFcLcLPulse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PTF::Pulse*)
   {
      ::PTF::Pulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PTF::Pulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PTF::Pulse", ::PTF::Pulse::Class_Version(), "./Pulse.hh", 6,
                  typeid(::PTF::Pulse), DefineBehavior(ptr, ptr),
                  &::PTF::Pulse::Dictionary, isa_proxy, 4,
                  sizeof(::PTF::Pulse) );
      instance.SetNew(&new_PTFcLcLPulse);
      instance.SetNewArray(&newArray_PTFcLcLPulse);
      instance.SetDelete(&delete_PTFcLcLPulse);
      instance.SetDeleteArray(&deleteArray_PTFcLcLPulse);
      instance.SetDestructor(&destruct_PTFcLcLPulse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PTF::Pulse*)
   {
      return GenerateInitInstanceLocal((::PTF::Pulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PTF::Pulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PTFcLcLptfEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PTFcLcLptfEvent(void *p = 0);
   static void *newArray_PTFcLcLptfEvent(Long_t size, void *p);
   static void delete_PTFcLcLptfEvent(void *p);
   static void deleteArray_PTFcLcLptfEvent(void *p);
   static void destruct_PTFcLcLptfEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PTF::ptfEvent*)
   {
      ::PTF::ptfEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PTF::ptfEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PTF::ptfEvent", ::PTF::ptfEvent::Class_Version(), "./ptfEvent.hh", 12,
                  typeid(::PTF::ptfEvent), DefineBehavior(ptr, ptr),
                  &::PTF::ptfEvent::Dictionary, isa_proxy, 4,
                  sizeof(::PTF::ptfEvent) );
      instance.SetNew(&new_PTFcLcLptfEvent);
      instance.SetNewArray(&newArray_PTFcLcLptfEvent);
      instance.SetDelete(&delete_PTFcLcLptfEvent);
      instance.SetDeleteArray(&deleteArray_PTFcLcLptfEvent);
      instance.SetDestructor(&destruct_PTFcLcLptfEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PTF::ptfEvent*)
   {
      return GenerateInitInstanceLocal((::PTF::ptfEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PTF::ptfEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace PTF {
//______________________________________________________________________________
TClass *Pulse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Pulse::Class_Name()
{
   return "PTF::Pulse";
}

//______________________________________________________________________________
const char *Pulse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PTF::Pulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pulse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PTF::Pulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pulse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PTF::Pulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pulse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PTF::Pulse*)0x0)->GetClass();
   return fgIsA;
}

} // namespace PTF
      namespace PTF {
//______________________________________________________________________________
TClass *ptfEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ptfEvent::Class_Name()
{
   return "PTF::ptfEvent";
}

//______________________________________________________________________________
const char *ptfEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PTF::ptfEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ptfEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PTF::ptfEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ptfEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PTF::ptfEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ptfEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PTF::ptfEvent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace PTF
      namespace PTF {
//______________________________________________________________________________
void ptfEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class PTF::ptfEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PTF::ptfEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(PTF::ptfEvent::Class(),this);
   }
}

} // namespace PTF
//______________________________________________________________________________
      namespace PTF {
void ptfEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PTF::ptfEvent.
      TClass *R__cl = ::PTF::ptfEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor0samples", (void*)&monitor0samples);
      R__insp.InspectMember("vector<UShort_t>", (void*)&monitor0samples, "monitor0samples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor1samples", (void*)&monitor1samples);
      R__insp.InspectMember("vector<UShort_t>", (void*)&monitor1samples, "monitor1samples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targetpmtsamples", (void*)&targetpmtsamples);
      R__insp.InspectMember("vector<UShort_t>", (void*)&targetpmtsamples, "targetpmtsamples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever0samples", (void*)&reciever0samples);
      R__insp.InspectMember("vector<UShort_t>", (void*)&reciever0samples, "reciever0samples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever1samples", (void*)&reciever1samples);
      R__insp.InspectMember("vector<UShort_t>", (void*)&reciever1samples, "reciever1samples.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventtime", &eventtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gantry0position", &gantry0position);
      R__insp.InspectMember(gantry0position, "gantry0position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gantry0angle", &gantry0angle);
      R__insp.InspectMember(gantry0angle, "gantry0angle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gantry1position", &gantry1position);
      R__insp.InspectMember(gantry1position, "gantry1position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gantry1angle", &gantry1angle);
      R__insp.InspectMember(gantry1angle, "gantry1angle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor0baseline", &monitor0baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor1baseline", &monitor1baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targetpmtbaseline", &targetpmtbaseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever0baseline", &reciever0baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever1baseline", &reciever1baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcsize", &adcsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor0pulses", (void*)&monitor0pulses);
      R__insp.InspectMember("vector<Pulse*>", (void*)&monitor0pulses, "monitor0pulses.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "monitor1pulses", (void*)&monitor1pulses);
      R__insp.InspectMember("vector<Pulse*>", (void*)&monitor1pulses, "monitor1pulses.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targetpmtpulses", (void*)&targetpmtpulses);
      R__insp.InspectMember("vector<Pulse*>", (void*)&targetpmtpulses, "targetpmtpulses.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever0pulses", (void*)&reciever0pulses);
      R__insp.InspectMember("vector<Pulse*>", (void*)&reciever0pulses, "reciever0pulses.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reciever1pulses", (void*)&reciever1pulses);
      R__insp.InspectMember("vector<Pulse*>", (void*)&reciever1pulses, "reciever1pulses.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace PTF
namespace ROOT {
   // Wrappers around operator new
   static void *new_PTFcLcLptfEvent(void *p) {
      return  p ? new(p) ::PTF::ptfEvent : new ::PTF::ptfEvent;
   }
   static void *newArray_PTFcLcLptfEvent(Long_t nElements, void *p) {
      return p ? new(p) ::PTF::ptfEvent[nElements] : new ::PTF::ptfEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_PTFcLcLptfEvent(void *p) {
      delete ((::PTF::ptfEvent*)p);
   }
   static void deleteArray_PTFcLcLptfEvent(void *p) {
      delete [] ((::PTF::ptfEvent*)p);
   }
   static void destruct_PTFcLcLptfEvent(void *p) {
      typedef ::PTF::ptfEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PTF::ptfEvent

      namespace PTF {
//______________________________________________________________________________
void Pulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class PTF::Pulse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PTF::Pulse::Class(),this);
   } else {
      R__b.WriteClassBuffer(PTF::Pulse::Class(),this);
   }
}

} // namespace PTF
//______________________________________________________________________________
      namespace PTF {
void Pulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PTF::Pulse.
      TClass *R__cl = ::PTF::Pulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "height", &height);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "baseline", &baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startbin", &startbin);
      TObject::ShowMembers(R__insp);
}

} // namespace PTF
namespace ROOT {
   // Wrappers around operator new
   static void *new_PTFcLcLPulse(void *p) {
      return  p ? new(p) ::PTF::Pulse : new ::PTF::Pulse;
   }
   static void *newArray_PTFcLcLPulse(Long_t nElements, void *p) {
      return p ? new(p) ::PTF::Pulse[nElements] : new ::PTF::Pulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_PTFcLcLPulse(void *p) {
      delete ((::PTF::Pulse*)p);
   }
   static void deleteArray_PTFcLcLPulse(void *p) {
      delete [] ((::PTF::Pulse*)p);
   }
   static void destruct_PTFcLcLPulse(void *p) {
      typedef ::PTF::Pulse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PTF::Pulse

/********************************************************
* PTFDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePTFDict();

extern "C" void G__set_cpp_environmentPTFDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Pulse.hh");
  G__add_compiledheader("ptfEvent.hh");
  G__cpp_reset_tagtablePTFDict();
}
#include <new>
extern "C" int G__cpp_dllrevPTFDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PTF */

/* PTF::Pulse */
static int G__PTFDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTF::Pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTF::Pulse[n];
     } else {
       p = new((void*) gvp) PTF::Pulse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTF::Pulse;
     } else {
       p = new((void*) gvp) PTF::Pulse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::Pulse*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::Pulse*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetBaseline((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::Pulse*) G__getstructoffset())->GetBaseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetHeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::Pulse*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::Pulse*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->SetStartBin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::Pulse*) G__getstructoffset())->GetStartBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTF::Pulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::Pulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PTF::Pulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTF::Pulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::Pulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::Pulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTF::Pulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::Pulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTF::Pulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PTFDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PTF::Pulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PTF::Pulse(*(PTF::Pulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PTF::Pulse G__TPTFcLcLPulse;
static int G__PTFDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PTF::Pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PTF::Pulse*) (soff+(sizeof(PTF::Pulse)*i)))->~G__TPTFcLcLPulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PTF::Pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PTF::Pulse*) (soff))->~G__TPTFcLcLPulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PTFDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTF::Pulse* dest = (PTF::Pulse*) G__getstructoffset();
   *dest = *(PTF::Pulse*) libp->para[0].ref;
   const PTF::Pulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PTF::ptfEvent */
static int G__PTFDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTF::ptfEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTF::ptfEvent[n];
     } else {
       p = new((void*) gvp) PTF::ptfEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTF::ptfEvent;
     } else {
       p = new((void*) gvp) PTF::ptfEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetMonitor0Samples(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor0Samples();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor0PhysicalSamples();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetMonitor1Samples(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor1Samples();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor1PhysicalSamples();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetTargetPMTSamples(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetTargetPMTSamples();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetTargetPMTPhysicalSamples();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetReciever0Samples(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetReciever0Samples();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetReciever0PhysicalSamples();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetReciever1Samples(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetReciever1Samples();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((PTF::ptfEvent*) G__getstructoffset())->GetReciever1PhysicalSamples();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetEventTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetEventTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetMonitor0Baseline((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor0Baseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetMonitor1Baseline((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor1Baseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetTargetPMTBaseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetReciever0Baseline((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever0Baseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetReciever1Baseline((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever1Baseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetADCSize((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PTF::ptfEvent*) G__getstructoffset())->GetADCSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->SetEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->AddMonitor0Pulse((PTF::Pulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor0Pulse((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor0PulseCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->AddMonitor1Pulse((PTF::Pulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor1Pulse((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetMonitor1PulseCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->AddTargetPulse((PTF::Pulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetTargetPulse((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetTargetPulseCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->AddReciever0Pulse((PTF::Pulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever0Pulse((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever0PulseCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->AddReciever1Pulse((PTF::Pulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever1Pulse((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PTF::ptfEvent*) G__getstructoffset())->GetReciever1PulseCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTF::ptfEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::ptfEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PTF::ptfEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTF::ptfEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTF::ptfEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::ptfEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTF::ptfEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTF::ptfEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PTFDict_222_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTF::ptfEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PTFDict_222_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PTF::ptfEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PTF::ptfEvent(*(PTF::ptfEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PTF::ptfEvent G__TPTFcLcLptfEvent;
static int G__PTFDict_222_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PTF::ptfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PTF::ptfEvent*) (soff+(sizeof(PTF::ptfEvent)*i)))->~G__TPTFcLcLptfEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PTF::ptfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PTF::ptfEvent*) (soff))->~G__TPTFcLcLptfEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PTFDict_222_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTF::ptfEvent* dest = (PTF::ptfEvent*) G__getstructoffset();
   *dest = *(PTF::ptfEvent*) libp->para[0].ref;
   const PTF::ptfEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PTF */

/* PTF::Pulse */

/* PTF::ptfEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPTFDict {
 public:
  G__Sizep2memfuncPTFDict(): p(&G__Sizep2memfuncPTFDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPTFDict::*p)();
};

size_t G__get_sizep2memfuncPTFDict()
{
  G__Sizep2memfuncPTFDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePTFDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse))) {
     PTF::Pulse *G__Lderived;
     G__Lderived=(PTF::Pulse*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse),G__get_linked_tagnum(&G__PTFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent))) {
     PTF::ptfEvent *G__Lderived;
     G__Lderived=(PTF::ptfEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent),G__get_linked_tagnum(&G__PTFDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePTFDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__PTFDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pulse*>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PTFDictLN_reverse_iteratorlEvectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PTF::Pulse*>",117,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PTF */
static void G__setup_memvarPTF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PTFDictLN_PTF));
   {
   }
   G__tag_memvar_reset();
}


   /* PTF::Pulse */
static void G__setup_memvarPTFcLcLPulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse));
   { PTF::Pulse *p; p=(PTF::Pulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"height=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"width=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"startbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PTFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PTF::ptfEvent */
static void G__setup_memvarPTFcLcLptfEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent));
   { PTF::ptfEvent *p; p=(PTF::ptfEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,2,"monitor0samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,2,"monitor1samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,2,"targetpmtsamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,2,"reciever0samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,2,"reciever1samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eventtime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"eventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_TVector3),-1,-1,2,"gantry0position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_TVector3),-1,-1,2,"gantry0angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_TVector3),-1,-1,2,"gantry1position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_TVector3),-1,-1,2,"gantry1angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"monitor0baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"monitor1baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"targetpmtbaseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"reciever0baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"reciever1baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"adcsize=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),G__defined_typename("vector<Pulse*>"),-1,2,"monitor0pulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),G__defined_typename("vector<Pulse*>"),-1,2,"monitor1pulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),G__defined_typename("vector<Pulse*>"),-1,2,"targetpmtpulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),G__defined_typename("vector<Pulse*>"),-1,2,"reciever0pulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR),G__defined_typename("vector<Pulse*>"),-1,2,"reciever1pulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PTFDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPTFDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPTF(void) {
   /* PTF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PTFDictLN_PTF));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPTFcLcLPulse(void) {
   /* PTF::Pulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse));
   G__memfunc_setup("Pulse",521,G__PTFDict_169_0_1, 105, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__PTFDict_169_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__PTFDict_169_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__PTFDict_169_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__PTFDict_169_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseline",1103,G__PTFDict_169_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _baseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseline",1091,G__PTFDict_169_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeight",901,G__PTFDict_169_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__PTFDict_169_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__PTFDict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__PTFDict_169_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartBin",1107,G__PTFDict_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartBin",1095,G__PTFDict_169_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PTFDict_169_0_14, 85, G__get_linked_tagnum(&G__PTFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PTF::Pulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PTFDict_169_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::Pulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PTFDict_169_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PTF::Pulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PTFDict_169_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PTF::Pulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PTFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PTFDict_169_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PTFDict_169_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::Pulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PTFDict_169_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTF::Pulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PTFDict_169_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::Pulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PTFDict_169_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTF::Pulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Pulse", 521, G__PTFDict_169_0_26, (int) ('i'), G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "u 'PTF::Pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pulse", 647, G__PTFDict_169_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PTFDict_169_0_28, (int) ('u'), G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 1, 1, 1, 1, 0, "u 'PTF::Pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPTFcLcLptfEvent(void) {
   /* PTF::ptfEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent));
   G__memfunc_setup("ptfEvent",844,G__PTFDict_222_0_1, 105, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonitor0Samples",1817,G__PTFDict_222_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - _samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor0Samples",1805,G__PTFDict_222_0_3, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor0PhysicalSamples",2634,G__PTFDict_222_0_4, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonitor1Samples",1818,G__PTFDict_222_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - _samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor1Samples",1806,G__PTFDict_222_0_6, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor1PhysicalSamples",2635,G__PTFDict_222_0_7, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetPMTSamples",1881,G__PTFDict_222_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - _samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPMTSamples",1869,G__PTFDict_222_0_9, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPMTPhysicalSamples",2698,G__PTFDict_222_0_10, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReciever0Samples",1894,G__PTFDict_222_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - _samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever0Samples",1882,G__PTFDict_222_0_12, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever0PhysicalSamples",2711,G__PTFDict_222_0_13, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReciever1Samples",1895,G__PTFDict_222_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - _samples", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever1Samples",1883,G__PTFDict_222_0_15, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever1PhysicalSamples",2712,G__PTFDict_222_0_16, 117, G__get_linked_tagnum(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTime",1213,G__PTFDict_222_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _eventtime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTime",1201,G__PTFDict_222_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonitor0Baseline",1895,G__PTFDict_222_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _monitor0baseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor0Baseline",1883,G__PTFDict_222_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonitor1Baseline",1896,G__PTFDict_222_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _monitor1baseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor1Baseline",1884,G__PTFDict_222_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__PTFDict_222_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _targetpmtbaseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPMTBaseline",1947,G__PTFDict_222_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReciever0Baseline",1972,G__PTFDict_222_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _reciever0baseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever0Baseline",1960,G__PTFDict_222_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReciever1Baseline",1973,G__PTFDict_222_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _reciever1baseline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever1Baseline",1961,G__PTFDict_222_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADCSize",911,G__PTFDict_222_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - _adcsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCSize",899,G__PTFDict_222_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__PTFDict_222_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _eventID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__PTFDict_222_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMonitor0Pulse",1578,G__PTFDict_222_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PTF::Pulse' - 0 - _pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor0Pulse",1601,G__PTFDict_222_0_34, 85, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor0PulseCount",2122,G__PTFDict_222_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMonitor1Pulse",1579,G__PTFDict_222_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PTF::Pulse' - 0 - _pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor1Pulse",1602,G__PTFDict_222_0_37, 85, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitor1PulseCount",2123,G__PTFDict_222_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTargetPulse",1401,G__PTFDict_222_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PTF::Pulse' - 0 - _pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPulse",1424,G__PTFDict_222_0_40, 85, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPulseCount",1945,G__PTFDict_222_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddReciever0Pulse",1655,G__PTFDict_222_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PTF::Pulse' - 0 - _pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever0Pulse",1678,G__PTFDict_222_0_43, 85, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever0PulseCount",2199,G__PTFDict_222_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddReciever1Pulse",1656,G__PTFDict_222_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PTF::Pulse' - 0 - _pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever1Pulse",1679,G__PTFDict_222_0_46, 85, G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReciever1PulseCount",2200,G__PTFDict_222_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PTFDict_222_0_48, 85, G__get_linked_tagnum(&G__PTFDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PTF::ptfEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PTFDict_222_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::ptfEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PTFDict_222_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PTF::ptfEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PTFDict_222_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PTF::ptfEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PTFDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PTFDict_222_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PTFDict_222_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::ptfEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PTFDict_222_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTF::ptfEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PTFDict_222_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTF::ptfEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PTFDict_222_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTF::ptfEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ptfEvent", 844, G__PTFDict_222_0_60, (int) ('i'), G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent), -1, 0, 1, 1, 1, 0, "u 'PTF::ptfEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ptfEvent", 970, G__PTFDict_222_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PTFDict_222_0_62, (int) ('u'), G__get_linked_tagnum(&G__PTFDictLN_PTFcLcLptfEvent), -1, 1, 1, 1, 1, 0, "u 'PTF::ptfEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPTFDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPTFDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPTFDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PTFDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_PTF = { "PTF" , 110 , -1 };
G__linked_taginfo G__PTFDictLN_PTFcLcLPulse = { "PTF::Pulse" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_PTFcLcLptfEvent = { "PTF::ptfEvent" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR = { "vector<PTF::Pulse*,allocator<PTF::Pulse*> >" , 99 , -1 };
G__linked_taginfo G__PTFDictLN_reverse_iteratorlEvectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PTF::Pulse*,allocator<PTF::Pulse*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePTFDict() {
  G__PTFDictLN_TClass.tagnum = -1 ;
  G__PTFDictLN_TBuffer.tagnum = -1 ;
  G__PTFDictLN_TMemberInspector.tagnum = -1 ;
  G__PTFDictLN_TObject.tagnum = -1 ;
  G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__PTFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__PTFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PTFDictLN_PTF.tagnum = -1 ;
  G__PTFDictLN_PTFcLcLPulse.tagnum = -1 ;
  G__PTFDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PTFDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PTFDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__PTFDictLN_TVector3.tagnum = -1 ;
  G__PTFDictLN_PTFcLcLptfEvent.tagnum = -1 ;
  G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR.tagnum = -1 ;
  G__PTFDictLN_reverse_iteratorlEvectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePTFDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PTFDictLN_PTF),0,-1,0,(char*)NULL,G__setup_memvarPTF,G__setup_memfuncPTF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PTFDictLN_PTFcLcLPulse),sizeof(PTF::Pulse),-1,292096,(char*)NULL,G__setup_memvarPTFcLcLPulse,G__setup_memfuncPTFcLcLPulse);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PTFDictLN_PTFcLcLptfEvent),sizeof(PTF::ptfEvent),-1,291072,(char*)NULL,G__setup_memvarPTFcLcLptfEvent,G__setup_memfuncPTFcLcLptfEvent);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_vectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PTFDictLN_reverse_iteratorlEvectorlEPTFcLcLPulsemUcOallocatorlEPTFcLcLPulsemUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupPTFDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPTFDict()");
  G__set_cpp_environmentPTFDict();
  G__cpp_setup_tagtablePTFDict();

  G__cpp_setup_inheritancePTFDict();

  G__cpp_setup_typetablePTFDict();

  G__cpp_setup_memvarPTFDict();

  G__cpp_setup_memfuncPTFDict();
  G__cpp_setup_globalPTFDict();
  G__cpp_setup_funcPTFDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPTFDict();
  return;
}
class G__cpp_setup_initPTFDict {
  public:
    G__cpp_setup_initPTFDict() { G__add_setup_func("PTFDict",(G__incsetup)(&G__cpp_setupPTFDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPTFDict() { G__remove_setup_func("PTFDict"); }
};
G__cpp_setup_initPTFDict G__cpp_setup_initializerPTFDict;

